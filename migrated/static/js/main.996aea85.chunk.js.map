{"version":3,"sources":["utils/index.ts","components/GoogleWeather/googleWeatherParser.ts","components/GoogleWeather/Loading.tsx","components/GoogleWeather/Chart.tsx","components/GoogleWeather/ChartMinified.tsx","components/GoogleWeather/Tabs.tsx","images/icon.png","components/GoogleWeather/index.tsx","index.tsx"],"names":["UTF8ArrayToString","isFromCodePointDefined","String","fromCodePoint","charCache","Array","charFromCodePt","fromCharCode","result","array","codePt","byte1","buffLen","length","i","push","join","px","value","computed","node","property","parseInt","document","defaultView","getComputedStyle","getPropertyValue","selector","querySelector","className","setAttribute","style","styleSet","Object","keys","forEach","isArray","prototype","toString","call","GoogleWeatherParser","a","fetch","response","responseBody","body","reader","getReader","uint8MergedArray","readerDone","read","done","concat","undefined","from","console","warn","releaseLock","Loading","text","comma","abs","Math","sign","diff","min","max","Chart","list","W","H","settings","minified","tempList","map","object","Number","tm","numbers","n","minmax","ymin","ymax","L","DY","Infinity","DX","cx","cy","t","y","dy","circles","lines","texts","polygons","dasharrayLines","tooltips","dasharrayLine","stroke","strokeWidth","strokeDasharray","opacity","prefix","tooltip","line","lineMinified","circle","r","fill","cursor","font","polygon","circleEvent","event","eventType","circleElement","currentTarget","getBoundingClientRect","circleIndex","height","width","dataset","index","dasharrayElement","tooltipElement","getAttribute","tw","offsetWidth","th","offsetHeight","type","visibility","top","left","tNext","x","xNext","yNext","textX","textY","p1y","p2x","p2y","p3x","p3y","p4x","p4y","points","weatherData","x1","y1","x2","y2","id","data-t","data-index","onMouseOver","onMouseOut","dts","p","h","ws","c","xmlns","ChartMinified","viewboxRef","useRef","initialClickState","eventTypes","grabbingClass","viewboxClass","viewboxClassGrabbing","mouseEventHandler","preventDefault","stopPropagation","viewboxElement","current","removeEventListener","addEventListener","pgx","pageX","currentLeft","stylize","onMouseDown","onMouseUp","ref","Tabs","tab1","useState","tabCurrentId","updateTabCurrentId","tabId","onClick","target","parentElement","_","data-tab","data-tab-text","GoogleWeatherData","weatherPage","sequenceToCharacter","sequence","pmcContainment","match","string","escapedSequenceRE","escapedBackslash","parsed","replace","hexSequence","data","JSON","parse","useParser","parserName","stateFn","parser","requestRef","componentStateValue","updateComponentState","requested","wobnm","wobct","dvl","uul_text","wobhl","iu","createFunctionComponent","resultIsArray","resultIsObject","iconURL","src","GoogleWeatherTabs","GoogleWeatherTemperature","GoogleWeatherGeo","GoogleWeatherPrecipitation","GoogleWeatherHumidity","GoogleWeatherWind","GoogleWeatherOutside","GoogleWeather","render","getElementById"],"mappings":"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","file":"static/js/main.996aea85.chunk.js","sourcesContent":["\r\nexport const es = ''\r\n\r\nexport const UTF8ArrayToString = (() => {\r\n  // Preallocate the cache for the common single byte chars\r\n  const isFromCodePointDefined = !!String.fromCodePoint\r\n  const charCache = new Array(128)\r\n  const charFromCodePt = String.fromCodePoint || String.fromCharCode\r\n  const result: number[] = []\r\n  return (array: number[]) => {\r\n    const buffLen = array.length  \r\n    let codePt, byte1\r\n    let i = 0\r\n    result.length = 0\r\n    while (i < buffLen) {\r\n      byte1 = array[i++]\r\n      if (byte1 <= 0x7F) codePt = byte1\r\n      else if (byte1 <= 0xDF) codePt = ((byte1 & 0x1F) << 6) | (array[i++] & 0x3F)\r\n      else if (byte1 <= 0xEF) codePt = ((byte1 & 0x0F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F)\r\n      else if (isFromCodePointDefined) codePt = ((byte1 & 0x07) << 18) | ((array[i++] & 0x3F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F)\r\n      else {\r\n        // Cannot convert four byte code points, so use \"?\" instead\r\n        codePt = 63\r\n        i = i + 3\r\n      }\r\n      result.push(charCache[codePt] || (charCache[codePt] = charFromCodePt(codePt)))\r\n    }\r\n    return result.join(es)\r\n  }\r\n})();\r\n\r\nexport const px = (value: any) => `${value}px`\r\n\r\nexport const computed = (node: Element, property: string) => parseInt(document.defaultView?.getComputedStyle(node).getPropertyValue(property) as string)\r\n\r\nexport const selector = (selector: string) => document.querySelector(`#${selector}`)\r\n\r\nexport const className = (node: HTMLElement, className: string) => node.setAttribute('class', node.className = className)\r\n\r\nexport const style = (node: HTMLElement, styleSet: {[key: string]: any}) => Object.keys(styleSet).forEach(property => node.style[property as any] = styleSet[property])\r\n\r\nexport const isArray = (array: any): boolean => Object.prototype.toString.call(array) === '[object Array]'\r\n\r\nexport const isBoolean = (bool: boolean): boolean => bool === true || bool === false\r\n\r\nexport const scroll = (axis: 'X' | 'Y' = 'Y'): number => Number((window.pageYOffset !== undefined)\r\n  // @ts-ignore\r\n  ? window[`page${axis}Offset`] : (document.documentElement || document.body.parentNode || document.body)[`scroll${axis === 'Y' ? 'Top' : 'Left'}`])","\r\nimport {UTF8ArrayToString} from '../../utils'\r\n\r\nconst GoogleWeatherParser = async (): Promise<string> => {\r\n  const response = await fetch('https://www.google.com/search?q=google+weather&oq=google+wea&aqs=chrome.0.69i59j69i57j0j0i20i263j0l2j69i60l2.2745j0j7&sourceid=chrome&ie=UTF-8')\r\n  const responseBody = response.body\r\n  const es = ''\r\n  if (responseBody === null) return es\r\n  const reader: ReadableStreamDefaultReader<Uint8Array> = responseBody.getReader()\r\n  let uint8MergedArray: number[] = []\r\n  let readerDone = false\r\n  try {\r\n    while (!readerDone) {\r\n      const read = await reader.read()\r\n      const {done, value} = read\r\n      readerDone = done\r\n      uint8MergedArray = uint8MergedArray.concat(value === undefined ? [] : Array.from(value as ArrayLike<number>))\r\n    }\r\n  }\r\n  catch(caught) { console.warn('GoogleWeatherParserError: ', caught) }\r\n  finally {\r\n    reader.releaseLock()\r\n  }\r\n  return UTF8ArrayToString(uint8MergedArray)\r\n}\r\n\r\nexport {GoogleWeatherParser}","\r\ninterface LoadingInterface {\r\n  text?: string\r\n}\r\n\r\nconst Loading: React.FunctionComponent<LoadingInterface> = ({text}) => {\r\n  return <span className=\"gw-temperature-loading\">Loading</span>\r\n}\r\n\r\nexport default Loading","\r\nimport React, {useState, useRef} from 'react'\r\nimport {IList} from './../../types'\r\nimport {isBoolean, style, selector} from '../../utils'\r\ninterface IChartProps extends IList {W: number, H: number, settings?: {[key: string]: any}}\r\nconst comma = ','\r\nconst {abs, sign} = Math\r\n// diff(-4, 3) == diff(4, -3) == diff(3, -4) == diff(-3, 4) == 7\r\n// diff(-1, -3) == diff(-3, -1) == diff(1, 3) == diff(3, 1) == 2\r\nconst diff = (min: number, max: number): number => sign(min) === sign(max) ? abs(abs(min) - abs(max)) : abs(min - max)\r\nconst dy = (h: number, min: number, max: number): number => h / (diff(min, max) || Infinity)\r\nconst dx = (w: number, l: number): number => w / l\r\nconst y  = (ymin: number, y: number, dy: number): number => dy * diff(ymin, y)\r\nconst minmax = (numbers: number[]): number[] => {\r\n  let min, max\r\n  min = max = numbers[0]\r\n  if (min === undefined || numbers.length === 1) return []\r\n  for (let i = 1; i < numbers.length; i++) {\r\n    const n = numbers[i]\r\n    if (n < min) min = n\r\n    if (n > max) max = n\r\n  }\r\n  return [min, max]\r\n}\r\n\r\nconst Chart: React.FunctionComponent<IChartProps> = ({list, W, H, settings = {minified: false}}) => {\r\n  const {minified} = settings\r\n  const [NS] = ['http://www.w3.org/2000/svg']\r\n  const tempList = (list || []).map(object => Number(object.tm))\r\n  const [ymin, ymax] = minmax(tempList)\r\n  const L = tempList.length\r\n  const DY = dy(H, ymin, ymax)\r\n  const DX = dx(W, L)\r\n  const cx = (i: number) => i * DX\r\n  const cy = (t: number) => y(ymin, t, DY)\r\n  const circles = []\r\n  const lines = []\r\n  const texts = []\r\n  const polygons = []\r\n  const dasharrayLines = []\r\n  const tooltips = []\r\n  const dasharrayLine = {style: {stroke: 'rgb(78, 78, 78)', strokeWidth: 1, strokeDasharray: '3', opacity: 0}, prefix: '__dasharray-'}\r\n  const tooltip = {class: 'chart-container__tooltip', prefix: '__tooltip-'}\r\n  const line = {style: {stroke: '#2870c6', strokeWidth: 3}}\r\n  const lineMinified = {style: {stroke: line.style.stroke, strokeWidth: 1}}\r\n  const circle = {r: 6, style: {fill: '#2870c6', cursor: 'pointer'}}\r\n  const text = {style: {fill: 'rgb(78, 78, 78)', font: 'bold 11px \"Open Sans\"'}}\r\n  const polygon = {style: {fill: '#B4CDEB', strokeWidth: 1, stroke: '#B4CDEB'}}\r\n  const circleEvent = (event: React.MouseEvent<SVGCircleElement, MouseEvent>) => {\r\n    const eventType = ['mouseover', 'mouseout']\r\n    const circleElement = event.currentTarget\r\n    const {height, width} = circleElement.getBoundingClientRect()\r\n    const circleIndex = circleElement.dataset.index\r\n    const dasharrayElement = selector(`${dasharrayLine.prefix}${circleIndex}`) as HTMLElement\r\n    const tooltipElement = selector(`${tooltip.prefix}${circleIndex}`) as HTMLElement\r\n    const cx = Number(circleElement.getAttribute('cx'))\r\n    const cy = Number(circleElement.getAttribute('cy'))\r\n    const tw = tooltipElement.offsetWidth\r\n    const th = tooltipElement.offsetHeight\r\n    if (event.type === eventType[0]) {\r\n      style(dasharrayElement, {opacity: 1})\r\n      style(tooltipElement, {visibility: 'visible', opacity: 1, top: `${cy - th - 10}px`, left: `${cx - tw / 2}px`})\r\n    }\r\n    if (event.type === eventType[1]) {\r\n      style(dasharrayElement, {opacity: 0})\r\n      style(tooltipElement, {visibility: 'hidden', opacity: 0})\r\n    }\r\n  }\r\n  for (let i = 0; i < L - 1; i++) {\r\n    const t = tempList[i]\r\n    const tNext = tempList[i + 1]\r\n    const x = cx(i)\r\n    const y = cy(t)\r\n    const xNext = cx(i + 1)\r\n    const yNext = cy(tNext)\r\n    const textX = Number(x) - 12\r\n    const textY = H - 4\r\n    const [p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y] = [x, y, x, H, xNext, H, xNext, yNext]\r\n    const points = `${p1x}${comma}${p1y} ${p2x}${comma}${p2y} ${p3x}${comma}${p3y} ${p4x}${comma}${p4y}`\r\n    const weatherData = (list as any[])[i]\r\n    polygons[polygons.length] = <polygon style={polygon.style} points={points} />\r\n    if (!minified) lines[lines.length] = <line style={line.style} x1={x} y1={y} x2={xNext} y2={yNext} />\r\n    else lines[lines.length] = <line style={lineMinified.style} x1={x} y1={y} x2={xNext} y2={yNext} />\r\n    if (i === 0) continue\r\n    if (!minified) dasharrayLines[dasharrayLines.length] = <line style={dasharrayLine.style} x1={x} y1={y} x2={x} y2={H} id={`${dasharrayLine.prefix}${i}`} />\r\n    if (!minified) circles[circles.length] = <circle style={circle.style} cx={x} cy={y} r={circle.r} data-t={t} data-index={i} onMouseOver={circleEvent} onMouseOut={circleEvent} />\r\n    if (!minified) tooltips[tooltips.length] = <div style={{top: `${y}px`, left: `${x}px`}} className={tooltip.class} id={`${tooltip.prefix}${i}`}>\r\n      {`${weatherData.dts}: `}\r\n      {`${t}°C | `}\r\n      {`P: ${weatherData.p} | `}\r\n      {`H: ${weatherData.h} | `}\r\n      {`W: ${weatherData.ws} | `}\r\n      {`O: ${weatherData.c}`}\r\n    </div>\r\n    if (!minified) if ((i % 2) === 0) texts[texts.length] = <text style={text.style} x={textX} y={textY}>{`+${i}h`}</text>\r\n  }\r\n  return <div className=\"chart-container\">\r\n    <svg xmlns={NS} width={W} height={H}>\r\n      <g>{polygons}{lines}{dasharrayLines}{circles}{texts}</g>\r\n    </svg>\r\n    {tooltips}\r\n  </div>\r\n}\r\n\r\nexport default Chart","\r\nimport {useRef} from 'react'\r\nimport Chart from './Chart'\r\nimport {IList} from '../../types'\r\nimport {className, es, px, style as stylize, computed} from '../../utils'\r\n\r\ninterface IChartMinifiedProps extends IList {\r\n  W: number,\r\n  H: number\r\n}\r\ninterface IInitialClickState {\r\n  left: number,\r\n  pgx: number\r\n}\r\n\r\nconst ChartMinified: React.FunctionComponent<IChartMinifiedProps> = ({W, H, list}) => {\r\n  const viewboxRef = useRef<HTMLDivElement>(null)\r\n  const initialClickState = useRef<IInitialClickState>()\r\n  const body = document.body\r\n  const eventTypes = ['mouseup', 'mousedown', 'mousemove'] as const\r\n  const grabbingClass = 'grabbing'\r\n  const containerClass = 'chartminified-container'\r\n  const viewboxClass = 'chartminified-container__viewbox'\r\n  const viewboxClassGrabbing = `${viewboxClass} ${grabbingClass}`\r\n  const style = {width: px(W), height: px(H)}\r\n  const mouseEventHandler = (event: MouseEvent | React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    const viewboxElement = viewboxRef.current as HTMLElement\r\n    if (event.type === eventTypes[0]) {\r\n      className(viewboxElement, viewboxClass)\r\n      className(body, es)\r\n      body.removeEventListener(eventTypes[2], mouseEventHandler)\r\n      initialClickState.current = undefined\r\n    }\r\n    if (event.type === eventTypes[1]) {\r\n      className(viewboxElement, viewboxClassGrabbing)\r\n      className(body, grabbingClass)\r\n      body.addEventListener(eventTypes[2], mouseEventHandler)\r\n      initialClickState.current = {pgx: event.pageX, left: computed(viewboxElement, 'left')}\r\n    }\r\n    if (event.type === eventTypes[2]) {\r\n      const {pgx, left} = initialClickState.current as IInitialClickState\r\n      const {offsetWidth} = viewboxElement\r\n      const cpgx = event.pageX\r\n      const currentLeft = left + (cpgx - pgx)\r\n      const viewboxElementL = currentLeft\r\n      const viewboxElementR = currentLeft + offsetWidth\r\n      let computedLeft\r\n      if (viewboxElementR > W) computedLeft = W - offsetWidth\r\n      else if (viewboxElementL < 0) computedLeft = 0\r\n      else computedLeft = currentLeft\r\n      stylize(viewboxElement, {left: px(computedLeft)})\r\n    }\r\n  }\r\n  body.addEventListener(eventTypes[0], mouseEventHandler)\r\n  return <div className={containerClass} style={style}>\r\n    <Chart W={W} H={H} list={list} settings={{minified: true}} />\r\n    <div className={viewboxClass} onMouseDown={mouseEventHandler} onMouseUp={mouseEventHandler} ref={viewboxRef}></div>\r\n  </div>\r\n}\r\n\r\nexport default ChartMinified","\r\nimport {useState} from 'react'\r\nimport {IList} from './../../types'\r\nimport Chart from './Chart'\r\nimport ChartMinified from './ChartMinified'\r\ninterface ITabsProps extends IList {}\r\n\r\nconst Tabs: React.FunctionComponent<ITabsProps> = ({list}) => {\r\n  const [tab1, tab2, tab3, classTabCurrent, classTab, classTabContent, classTabContentCurrent] = ['1', '2', '3', 'tab current', 'tab', 'tab-content', 'tab-content current']\r\n  const [tabCurrentId, updateTabCurrentId] = useState<string>(tab1)\r\n  const tabContainerClickHandler = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const target = event.target as Element\r\n    const isTabText = target.getAttribute('data-tab-text')\r\n    if (isTabText) {\r\n      const tabId = target.parentElement?.getAttribute('data-tab') as string\r\n      updateTabCurrentId(_ => tabId)\r\n    }\r\n  }\r\n  const className = (tabId: string): string[] => tabCurrentId === tabId ? [classTabCurrent, classTabContentCurrent] : [classTab, classTabContent]\r\n  \r\n  return <>\r\n    <div className=\"tab-container\" onClick={tabContainerClickHandler}>\r\n      <div className={className(tab1)[0]} data-tab={tab1}>\r\n        <span className=\"tab-text\" data-tab-text>\r\n          TEMPERATURE\r\n        </span>\r\n      </div>\r\n      <span className=\"tab-line\"></span>\r\n      <div className={className(tab2)[0]} data-tab={tab2}>\r\n        <span className=\"tab-text\" data-tab-text>\r\n          DEVELOPER\r\n        </span>\r\n      </div>\r\n      <span className=\"tab-line\"></span>\r\n      <div className={className(tab3)[0]} data-tab={tab3}>\r\n        <span className=\"tab-text\" data-tab-text>\r\n          EXTENSION INFO\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div className=\"tabs-content\">\r\n      <div className={className(tab1)[1]}>\r\n        <Chart list={list} W={15000} H={200} />\r\n        <ChartMinified list={list} W={500} H={50} />\r\n      </div>\r\n      <div className={className(tab2)[1]}>tab2</div>\r\n      <div className={className(tab3)[1]}>tab3</div>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Tabs","export default __webpack_public_path__ + \"static/media/icon.ff7aa113.png\";","\r\nimport {GoogleWeatherParser} from './googleWeatherParser'\r\nimport Loading from './Loading'\r\nimport Tabs from './Tabs'\r\nimport {es, isArray} from '../../utils'\r\nimport {useState, useRef} from 'react'\r\nimport p from './../../images/icon.png'\r\nimport '../../styles/index.css'\r\n\r\ninterface GoogleWeatherProps {\r\n  prefix?: string\r\n}\r\n\r\nlet GoogleWeatherData = (async () => { \r\n  const weatherPage = await GoogleWeatherParser()\r\n  const sequenceToCharacter = (sequence: string) => String.fromCharCode(parseInt(sequence, 16))\r\n  const pmcContainment = weatherPage.match(/var pmc=\\'([\\s\\S]*?)\\'/)\r\n  const string = pmcContainment && pmcContainment[1] || '{}'\r\n  const escapedSequenceRE = /\\\\x([0-9a-fA-F]{2})/g\r\n  const escapedBackslash = [/\\\\\\\\\\\"/g, '\\\\\"'] // \\\\\" => \\\"\r\n  const parsed = string\r\n    .replace(escapedSequenceRE, (_, hexSequence) => sequenceToCharacter(hexSequence))\r\n    .replace(escapedBackslash[0], escapedBackslash[1] as string)\r\n\r\n  const data = JSON.parse(parsed)\r\n  return data\r\n})()\r\n\r\nconst parser = (type: string) => async () => {\r\n  const data = await GoogleWeatherData\r\n  switch (type) {\r\n    case 'temperature': return data.wobnm.wobct.tm\r\n    case 'geo': return data.dvl.uul_text\r\n    case 'precipitation': return data.wobnm.wobhl[0].p\r\n    case 'humidity': return data.wobnm.wobhl[0].h\r\n    case 'wind': return data.wobnm.wobhl[0].ws // tws?\r\n    case 'outside': return [data.wobnm.wobhl[0].c, data.wobnm.wobhl[0].iu]\r\n    case 'trange': return data.wobnm.wobhl\r\n  }\r\n}\r\n\r\nconst GoogleWeatherInitLoading = (stateFn: (...args: any[]) => any, parser: () => Promise<any>, requestRef: React.MutableRefObject<boolean>) => {\r\n  (async () => stateFn(await parser()))();\r\n  requestRef.current = true\r\n}\r\n\r\nconst useParser = (parserName: string) => {\r\n  const [componentStateValue, updateComponentState] = useState<string | any[]>(es)\r\n  const requested = useRef<boolean>(false)\r\n  let result\r\n  if (requested.current) {\r\n    result = componentStateValue\r\n  }\r\n  else {\r\n    result = <Loading text={'loading...'} />\r\n    GoogleWeatherInitLoading(updateComponentState, parser(parserName), requested)\r\n  }\r\n  return result\r\n}\r\n\r\nconst createFunctionComponent = (parserName: string): React.FunctionComponent<GoogleWeatherProps> => {\r\n  return ({prefix}) => {\r\n    const result = useParser(parserName)\r\n    const resultIsArray = isArray(result)\r\n    const resultIsObject = typeof result === 'object'\r\n    const className = `gw-${parserName}`\r\n    switch (parserName) {\r\n      case 'temperature': return <div className={className}>{resultIsObject ? result : `${result}°C`}</div>\r\n      case 'outside': {\r\n        if (!resultIsArray) return <div className={className}><span>{prefix}</span>{result}</div>\r\n        else {\r\n          const data = result as any[]\r\n          const [iconURL, text] = [`https:${data[1]}`, data[0]]\r\n          return <div className={className}><span>{prefix}</span><b><img src={iconURL} /><span>{text}</span></b></div>\r\n        }\r\n      }\r\n      default: return <div className={className}>{prefix}<b>{result}</b></div>\r\n    }\r\n  }\r\n}\r\n\r\nconst GoogleWeatherTabs: React.FunctionComponent = () => {\r\n  const result = useParser('trange')\r\n  return isArray(result) ? <Tabs list={result as any[]} /> : <>{result}</>\r\n}\r\nconst GoogleWeatherTemperature: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('temperature')\r\nconst GoogleWeatherGeo: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('geo')\r\nconst GoogleWeatherPrecipitation: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('precipitation')\r\nconst GoogleWeatherHumidity: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('humidity')\r\nconst GoogleWeatherWind: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('wind')\r\nconst GoogleWeatherOutside: React.FunctionComponent<GoogleWeatherProps> = createFunctionComponent('outside')\r\n\r\nconst GoogleWeather: React.FunctionComponent = () => {\r\n  return <>\r\n    <div>\r\n      <div className=\"gw-container w-120\">\r\n        <img src={p} className=\"gw-icon\" />\r\n        <GoogleWeatherTemperature />\r\n      </div>\r\n      <div className=\"gw-container w-400 ml-25\">\r\n        <GoogleWeatherGeo prefix={'Geo: '} />\r\n        <GoogleWeatherPrecipitation prefix={'Precipitation: '} />\r\n        <GoogleWeatherHumidity prefix={'Humidity: '} />\r\n        <GoogleWeatherWind prefix={'Wind: '} />\r\n        <GoogleWeatherOutside prefix={'Outside: '} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <GoogleWeatherTabs />\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport {\r\n  GoogleWeather,\r\n  GoogleWeatherPrecipitation,\r\n  GoogleWeatherHumidity,\r\n  GoogleWeatherWind,\r\n  GoogleWeatherGeo,\r\n  GoogleWeatherOutside,\r\n  GoogleWeatherTemperature\r\n}","import React from 'react'\nimport {render} from 'react-dom'\nimport './index.css'\nimport {GoogleWeather} from './components/GoogleWeather'\n\nrender(<GoogleWeather />, document.getElementById('root'))"],"sourceRoot":""}